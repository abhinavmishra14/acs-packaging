---
dist: xenial
language: java
jdk: openjdk11

services:
  - docker

git:
  depth: false
  quiet: true

cache:
  directories:
    - ${HOME}/.m2/repository

# the cache can grow constantly
before_cache: bash scripts/travis/cleanup_cache.sh

branches:
  only:
    - master
    - /release\/.*/
    - /feature\/.*/
    - /fix\/.*/

env:
  global:
    - TAS_SCRIPTS=../alfresco-community-repo/packaging/tests/scripts
    - TAS_ENVIRONMENT=./tests/environment
    # Release version has to start with real version (7.1.0-....) for the docker image to build successfully.
    - RELEASE_VERSION=7.1.0-A3
    - DEVELOPMENT_VERSION=7.1.0-SNAPSHOT

stages:
  - name: test
    if: commit_message !~ /\[skip tests\]/
  - name: docker_latest
    if: fork = false AND type != pull_request AND (branch = master OR branch =~ /release\/.*/)
  - name: release
    if: commit_message =~ /\[release\]/ AND fork = false AND type != pull_request AND (branch = master OR branch =~ /release\/.*/)
  - name: publish
    if: commit_message =~ /\[publish\]/ AND fork = false AND type != pull_request AND (branch = master OR branch =~ /release\/.*/)

before_install: travis_retry bash scripts/travis/init.sh
install: travis_retry travis_wait 40 bash scripts/travis/build.sh

jobs:
  include:
    - name: "All AMPs tests"
      before_script:
        - travis_retry travis_wait 20 mvn -B -q install -f tests/tas-all-amps/pom.xml -DskipTests -Pall-tas-tests,prepare-wars-with-amps
      script:
        - ./tests/scripts/checkLibraryDuplicates.sh ./tests/tas-all-amps/target/war/alfresco/WEB-INF/lib
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-all-amps-test.yml
        - docker ps
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
        - docker ps
        - docker ps -a | grep alfresco-content-repository-all-amps-test | head -1 | awk '{print $1}' | xargs docker logs
        - exit 1
        - travis_wait 20 mvn -B install -f tests/tas-all-amps/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false

    # Test local repo and share docker images that will be used in the single pipeline. Tag:latest
    - name: "Single Pipeline image tests"
      if: fork = false AND type != pull_request
      before_script:
        - travis_retry travis_wait 20 mvn -B clean install -Ppipeline,local $(mvn -B -q help:evaluate "-Dexpression=dependency.alfresco-enterprise-repo.version" -DforceStdout | grep -q '\-SNAPSHOT$' && echo '-Drepo.image.tag=latest')
        # Show what DTAS will be looking for
        - cat tests/pipeline-all-amps/repo/target/dtas/dtas-config.json
        - pyenv versions
        - pyenv global 3.7.1
        - pip install requests pytest
        - git clone --depth 1 --branch v1.0.1 https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Alfresco/alfresco-deployment-test-automation-scripts.git dtas
        - docker images | grep pipeline
      script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-pipeline-all-amps.yml
        - docker ps
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8080/alfresco/" 180
        - docker ps
        - docker ps -a | grep alfresco-pipeline-all-amps-repo | head -1 | awk '{print $1}' | xargs docker logs
        - exit 1
        # Show what AMPs the repo has installed
        - curl -v --user admin.pipeline@alfresco.com:admin http://localhost:8080/alfresco/api/discovery
        - cd dtas
        - pytest --configuration ../tests/pipeline-all-amps/repo/target/dtas/dtas-config.json tests/ -s
